export default `
<h3>16. Использование пакетов</h3>

<p>Как использовать установленный в папку <span>node_modules</span> или глобально пакет?

<p>Скажем, вы установили <span>lodash</span>, популярную вспомогательную JavaScript-библиотеку, с помощью <span>npm install lodash</span>. 

<p>Эта команда установит <span>lodash</span> в локальную директорию <span>node_modules</span>. 

<p>Для использования в программе пакет сначала нужно импортировать с помощью <span>require</span>: 

<code>
const _ = require('lodash')
</code>

<p>Что если пакет является исполняемым файлом? 

<p>В этом случае исполняемый файл будет помещен в каталог <span>node_modules/.bin/</span>. 

<p>Это можно продемонстрировать с помощью библиотеки <a href="https://www.npmjs.com/package/cowsay">cowsay</a>. 

<p>Данный пакет предоставляет программу для командной строки, при выполнении которой корова (и другие животные) что-либо "произносит". 

<p>При установке пакета посредством <span>npm install cowsay</span> будет установлен сам пакет и несколько его зависимостей:</p>

<img src="./img/16-1.png" />

<p>Папка <span>.bin</span> является скрытой и содержит символические ссылки на бинарные данные "cowsay":</p>

<img src="./img/16-2.png" />

<p>Как их запустить? 

<p>Вы, конечно, можете набрать <span>./node_modules/.bin/cowsay</span> и все будет работать, но npx, включенный в npm (начиная с версии 5.2), является более подходящим вариантом. Вы просто выполняете <span>npx cowsay</span> и npx определит местонахождения файла автоматически:</p>

<img src="./img/16-3.png" />

<p>Корова говорит: "Забери меня отсюда". 
`