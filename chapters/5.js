export default `
<h3>5. Разница между Node.js и браузером</h3>

<p>JavaScript может быть использован как в браузере, так и в Node.js. 

<p>Однако создание приложений для браузера сильно отличается от аналогичного процесса в Node.js.

<p>Несмотря на то, что в обоих случаях используется JavaScript, существуют некоторые ключевые отличия, определяющие специфику разработки. 

<p>С точки зрения JavaScript-фронтендера (разработчика фронтенда - клиентской части приложения), разработка приложений на Node.js имеет существенное преимущество, выражающееся в том, что везде, и на клиенте, и на сервере, используется один язык программирования - JavaScript. 

<p>Это отличная возможность стать фуллстеком: все мы знаем, как сложно основательно изучить новый язык программирования, а в данном случае - такая необходимость отсутствует. 

<p>Единственное, что потребуется изучить - это специфическая экосистема. 

<p>В браузере большую часть времени нам приходится иметь дело с DOM (Document Object Model, объектной моделью документа) и другими веб-API (Application Programming Interface, интерфейс прикладного программирования), например, куки. Разумеется, их не существует в Node.js. В Node.js отсутствуют window, document и другие объекты, характерные для браузера. 

<p>С другой стороны, в браузерах отсутствуют замечательные API, предоставляемые Node.js посредством модулей, например, доступ к файловой системе. 

<p>Другим серьезным отличием является то обстоятельство, что в Node.js вы контролируете среду выполнения кода. Если вы не разрабатываете открытое приложение, которое любой желающий может развернуть где угодно, вы точно знаете, какая версия Node.js используется для запуска приложения. Это очень удобно в отличие от браузера, поскольку пользователи сами решают, какой браузер им использовать. 

<p>Это означает, что вы можете писать код на JavaScript, поддерживаемом вашей версией Node.js. 

<p>Поскольку JavaScript развивается очень динамично, браузеры не всегда успевают своевременно внедрять новые возможности языка, а пользователи не всегда быстро обновляются, поэтому в вебе вам часто приходится поддерживать старый JavaScript. 

<p>Для транспиляции кода в ES5 вы можете использовать Babel, в Node.js такой необходимости не возникает. 

<p>Еще одним отличием является то, что в Node.js используется модульная система CommonJS, а в браузерах реализована поддержка ES-модулей. 

<p>На практике это означает, что в Node.js мы используем <span>require()</span>, а в браузере <span>import</span>.
`