export default `
<h3>9. REPL</h3>

<p>Команда <span>node</span> используется для запуска Node.js-скриптов:

<code>
node script.js 
</code>

<p>Если мы опустим имя файла, то попадем в режим REPL:

<code>
node 
</code>

<p>REPL (Run Evaluate Print Loop, цикл "чтение-вычисление-вывод") - это среда выполнения кода (обычно, окно терминала), которая принимает выражение, введенное пользователем, и возвращает результат вычисления этого выражения. 

<p>Если вы введете <span>node</span> в терминале, произойдет следующее: 

<code>
>
</code>

<p>Терминал перейдет в режим ожидания. 

<p>Если быть более точным, терминал в данном случае ожидает ввода какого-либо JavaScript-кода. 

<p>Введем следующее:

<code>
> console.log('test')
test 
undefined 
>
</code>

<p>Первое значение, <span>test</span>, это то, что мы велели вывести в консоль, затем мы получаем <span>undefined</span> - значение, которое вернуло выполнение <span>console.log()</span>

<p>После этого мы можем ввести что-нибудь еще. 

<h5>Использование <span>tab</span> для автозавершения</h5>

<p>REPL является интерактивным. 

<p>Если нажать <span>tab</span> при написании кода, REPL попытается завершить написанное, выбирая из определенных ранее или предопределенных переменных. 

<h5>Объекты JavaScript</h5>

<p>Попробуйте ввести название JavaScript-класса, например, <span>Number</span>, добавьте к нему точку и нажмите <span>tab</span>. 

<p>REPL покажет все свойства и методы данного класса:</p>

<img src="./img/9-1.png" />

<h5>Глобальные объекты</h5>

<p>Вы можете получить список глобальных объектов, введя <span>global.</span> и нажав <span>tab</span>:</p>

<img src="./img/9-2.png" />

<h5>Специальная переменная _</h5>

<p>Если в конце кода набрать <span>_</span>, будет выведен результат выполнения последней операции. 

<h5>Команды после точки</h5>

<p>REPL содержит некоторые специальные команды, начинающиеся с точки. Вот они:

<ul>
    <li><span>.help</span> - показывает список доступных команд</li>
    <li><span>.editor</span> - включает режим редактирования для написания многострочного JavaScript-кода. Для выполнения кода в этом режиме необходимо нажать <span>ctrl-D</span></li>
    <li><span>.break</span> - прекращает ввод многострочного кода. Аналогично нажатию <span>ctrl-C</span></li>
    <li><span>.clear</span> - сбрасывает контекст REPL к пустому объекту, удаляет весь введенный код</li>
    <li><span>.load</span> - загружает JavaScript-файл, находящийся в текущей (рабочей) директории</li>
    <li><span>.save</span> - сохраняет сессию REPL в файл с указанным именем</li>
    <li><span>.exit</span> - выход из REPL. Аналогично двойному нажатию <span>ctrl-C</span></li>
</ul>

<p>REPL понимает, что вы вводите многостроный код без вызова <span>.editor</span>. 

<p>Например, если вы начали реализовывать итерацию:

<code>
[1, 2, 3].forEach(num => {
</code>

<p>и нажали <span>enter</span>, REPL перейдет на новую строку с тремя точками в начале, сообщая, что вы можете продолжить работу с блоком кода:

<code>
... console.log(num)
... })
</code>

<p>Если вы введете <span>.break</span> в конце, режим набора многострочного кода остановится и выражение не будет выполнено. 
`