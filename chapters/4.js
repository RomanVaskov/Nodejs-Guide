export default `
<h3>4. Необходимый уровень владения JavaScript</h3>

<p>Будучи новичком в программировании, сложно определить свой уровень мастерства. 

<p>Также сложно определить, где заканчивается JavaScript и начинается Node.js, и наоборот. 

<p>Лично я бы посоветовал хорошенько разобраться со следующими основными концепциями JavaScript перед погружением в Node.js: 

<ul>
    <li>Синтаксис или лексическая структура</li>
    <li>Выражения (по сути, тот же синтаксис)</li>
    <li>Типы данных</li>
    <li>Переменные</li>
    <li>Функции</li>
    <li>Ключевое слово "this"</li>
    <li>Стрелочные функции</li>
    <li>Циклы</li>
    <li>Область видимости</li>
    <li>Массивы</li>
    <li>Шаблонные или строковые литералы</li>
    <li>Точка с запятой (случаи ее обязательного использования, например, при работе с IIFE)</li>
    <li>Строгий режим</li>
    <li>ECMAScript 6+</li>
</ul>

<p>Освоение названных концепций - начало пути профессионального фуллстек-разработчика. 

<p>Следующие концепции также являются ключом к пониманию асинхронного программирования, которое является фундаментальной частью Node.js:

<ul>
    <li>Асинхронное программирование и функции обратного вызова (колбеки)</li>
    <li>Таймеры (счетчики)</li>
    <li>Промисы (обещания)</li>
    <li>Async/await</li>
    <li>Замыкания</li>
    <li>Цикл событий (стек вызовов)</li>
</ul>
`